#!/bin/bash

# ==============================================================================
# Script 4 : Configuration du Pare-feu UFW
# ==============================================================================

set -e
set -o pipefail

# --- Couleurs et Fonctions ---
C_RESET='\033[0m'; C_RED='\033[0;31m'; C_GREEN='\033[0;32m'; C_YELLOW='\033[0;33m'; C_BLUE='\033[0;34m'
info() { echo -e    "${C_BLUE}[INFO   ]${C_RESET}‚ÑπÔ∏è $1"; }
success() { echo -e "${C_GREEN}[SUCCESS]${C_RESET}‚úÖ $1"; }
warn() { echo -e    "${C_YELLOW}[WARN   ]${C_RESET}‚ö†Ô∏è $1"; }
error() { echo -e   "${C_RED}[ERROR  ]${C_RESET}‚ùå $1" >&2; echo ".... Fin le script avec une erreur"; exit 1; }
start_script() { echo -e "${C_BLUE}[START  ]${C_RESET}üèÅ $1üöÄ"; }
end_success() { echo -e "${C_GREEN}[END    ]${C_RESET}üèÅ $1"; exit 0; }

# --- D√©but du script ---
start_script "### √âtape 4 : Configuration du Pare-feu UFW ###"

# --- Tests Pr√©requis ---
info "V√©rification des pr√©requis..."
if ! command -v ufw &>/dev/null; then
    error "UFW n'est pas install√©. C'est inhabituel pour Ubuntu. Veuillez v√©rifier votre syst√®me."
fi

if ! ufw status | grep -q "Status: active"; then
    warn "UFW n'est pas actif. Il sera activ√© √† la fin de ce script."
    UFW_WAS_INACTIVE=true
else
    UFW_WAS_INACTIVE=false
fi
success "UFW est disponible."

# --- Configuration des r√®gles ---
info "Configuration des r√®gles de pare-feu..."

# Autoriser SSH pour ne pas se bloquer l'acc√®s !
ufw allow OpenSSH >/dev/null

# Autoriser Nginx HTTP (port 80)
ufw allow 'Nginx HTTP' >/dev/null
success "R√®gle 'Nginx HTTP' (port 80) autoris√©e."

# S'assurer que le port 3000 n'est PAS autoris√©
if ufw status | grep -q '3000/tcp.*ALLOW'; then
    info "Le port 3000 est actuellement autoris√©, il va √™tre supprim√© pour des raisons de s√©curit√©."
    ufw delete allow 3000/tcp >/dev/null
    success "R√®gle pour le port 3000 supprim√©e."
else
    success "Le port 3000 n'est pas expos√© publiquement, ce qui est correct."
fi

# --- Activation / Rechargement ---
if [ "$UFW_WAS_INACTIVE" = true ]; then
    info "Activation de UFW..."
    # L'option --force est n√©cessaire pour une ex√©cution non-interactive
    ufw --force enable
else
    info "Rechargement des r√®gles UFW..."
    ufw reload >/dev/null
fi
success "Le pare-feu est actif et configur√©."

# --- Tests Post-Configuration ---
info "Validation de la configuration UFW..."

UFW_STATUS=$(ufw status verbose)

if ! echo "$UFW_STATUS" | grep -q "80/tcp.*ALLOW IN.*Anywhere (Nginx HTTP)"; then
    error "La r√®gle pour autoriser Nginx HTTP (port 80) n'a pas √©t√© correctement appliqu√©e."
fi
success "La r√®gle pour le port 80 est bien pr√©sente."

if echo "$UFW_STATUS" | grep -q "3000/tcp.*ALLOW IN"; then
    error "Le port 3000 est toujours expos√© ! Probl√®me de s√©curit√©."
fi
success "La r√®gle pour le port 3000 est bien absente (ou bloqu√©e par d√©faut)."
end_success "Configuration du pare-feu UFW termin√©e avec succ√®s."